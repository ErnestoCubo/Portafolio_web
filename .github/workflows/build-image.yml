name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.13]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Create data.json
        run: |
          mkdir -p src/data
          echo "${{ secrets.DATA_JSON }}" | base64 -d > src/data/data.json

      - run: npm ci
      - run: npm run build --if-present

      - name: Build Docker image
        run: docker build . -t portfolio:latest

      - name: Save Docker image as artifact
        run: docker save portfolio:latest -o portfolio.tar

      - uses: actions/upload-artifact@v3
        with:
          name: portfolio-image
          path: portfolio.tar
  
  push-image:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: portfolio-image
      
      - name: Load Docker image
        run: docker load -i portfolio.tar

      - name: Log in to GitHub Container Registry
        run: |
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Push to Git CR
        run: | 
          docker tag portfolio:latest ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:latest
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:latest
