name: Secure Build and Push Docker Image

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  lint-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v1.5.0

      - name: Scan dependencies for vulnerabilities
        run: npm audit --audit-level=high

  build:
    runs-on: ubuntu-latest
    needs: lint-code
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Create data.json
        run: |
          mkdir -p src/data
          echo "${{ secrets.DATA_JSON }}" | base64 -d > src/data/data.json

      - name: Install production dependencies
        run: npm ci

      - name: Build project
        run: npm run build --if-present

      - name: Build Docker image
        run: |
          docker build . -t portfolio:${{ github.ref_name }}

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: portfolio:${{ github.ref_name }}
          exit-code: 1
          severity: HIGH,CRITICAL

      - name: Save Docker image as artifact
        run: docker save portfolio:${{ github.ref_name }} -o portfolio.tar
      - uses: actions/upload-artifact@v3
        with:
          name: portfolio-image
          path: portfolio.tar

  sign-and-push-docker:
    runs-on: ubuntu-latest
    environment: production
    needs: build
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: portfolio-image
          
      - name: Load Docker image
        run: docker load -i portfolio.tar

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Push Docker image
        run: |
          docker tag portfolio:${{ github.ref_name }} ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:${{ github.ref_name }}
          docker tag portfolio:${{ github.ref_name }} ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:latest
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:${{ github.ref_name }}
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:latest

      - name: Set up Cosign key
        run: echo $COSIGN_KEY > cosign.key
        shell: bash
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}

      - name: Set up Cosign public key
        run: echo $COSIGN_PUB > cosign.pub
        shell: bash
        env:
          COSIGN_PUB: ${{ secrets.COSIGN_PUB }}

      - name: Install cosign
        run: |
          curl -sSL https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -o cosign
          chmod +x cosign
          sudo mv cosign /usr/local/bin/cosign

      - name: Sign Docker image
        run: |
          cosign sign --key cosign.key ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:${{ github.ref_name }}
          cosign sign --key cosign.key ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:latest
        shell: bash

      - name: Verify Docker image
        run: |
          cosign verify --key cosign.pub ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:${{ github.ref_name }}
          cosign verify --key cosign.pub ghcr.io/${{ secrets.GHCR_USERNAME }}/portfolio:latest
        shell: bash
